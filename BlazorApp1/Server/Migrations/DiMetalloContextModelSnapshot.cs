// <auto-generated />
using System;
using BlazorApp1.Server.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp1.Server.Migrations
{
    [DbContext(typeof(DiMetalloContext))]
    partial class DiMetalloContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AspNetRoleAspNetUser", b =>
                {
                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("AspNetRoleAspNetUser");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId")
                        .HasName("PK_AspNetUserRoles_1");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Corredor")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Cp")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CP");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DomicilioEntrega")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("domicilioEntrega");

                    b.Property<string>("Expreso")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NombreEmpresa")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Observaciones")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Cotizacione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alcance")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("alcance");

                    b.Property<string>("Cantidad")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("cantidad");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("cliente");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("codigo");

                    b.Property<string>("Color")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("color");

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Fechaentrega")
                        .IsRequired()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaentrega");

                    b.Property<string>("Observaciones")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("observaciones");

                    b.Property<string>("Planos")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("planos");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("titulo");

                    b.Property<string>("Tratamientosuperficial")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("tratamientosuperficial");

                    b.Property<string>("Valordolar")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("valordolar");

                    b.Property<string>("Valorpeso")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("valorpeso");

                    b.HasKey("Id");

                    b.ToTable("cotizaciones", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DNI");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastNames")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.EventosProduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Etapa")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("etapa");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int?>("Operario")
                        .HasColumnType("int")
                        .HasColumnName("operario");

                    b.Property<int?>("Ot")
                        .HasColumnType("int")
                        .HasColumnName("ot");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("EventosProduccion", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Foto")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Lotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Recepcion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("StockMax")
                        .HasColumnType("int");

                    b.Property<int?>("StockMin")
                        .HasColumnType("int");

                    b.Property<int?>("StockReal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Insumo", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.MaquinasHerramienta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Asignacion")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DescripcionMantenimiento")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Disposicion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("FechaIngreso")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MotivoDisposicion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MotivoEstado")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PeriodicidadMantenimiento")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaquinasHerramientas");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.MateriaPrima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Lote")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("StockMax")
                        .HasColumnType("int");

                    b.Property<int?>("StockMin")
                        .HasColumnType("int");

                    b.Property<int?>("StockReal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MateriaPrima", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Ordencompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Aprobada")
                        .HasColumnType("datetime")
                        .HasColumnName("aprobada");

                    b.Property<string>("Archivo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("archivo");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("CondicionPago")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("condicionPago");

                    b.Property<string>("Especificacion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("especificacion");

                    b.Property<string>("Estado")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Generada")
                        .HasColumnType("datetime")
                        .HasColumnName("generada");

                    b.Property<int?>("Insumo")
                        .HasColumnType("int")
                        .HasColumnName("insumo");

                    b.Property<int?>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("precio");

                    b.Property<int?>("Proveedor")
                        .HasColumnType("int")
                        .HasColumnName("proveedor");

                    b.Property<DateTime?>("Recepcionada")
                        .HasColumnType("datetime")
                        .HasColumnName("recepcionada");

                    b.HasKey("Id");

                    b.ToTable("ordencompra", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Ordentrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cantidad")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("cantidad");

                    b.Property<string>("Cliente")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("cliente");

                    b.Property<string>("Codigo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Despiece")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("despiece");

                    b.Property<string>("Especificaciones")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("especificaciones");

                    b.Property<string>("Estado")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Fechaentrega")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaentrega");

                    b.Property<string>("Fechas")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("fechas");

                    b.Property<string>("Insumosusados")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("insumosusados");

                    b.Property<string>("Lugarentrega")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("lugarentrega");

                    b.Property<string>("Observaciones")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("observaciones");

                    b.Property<DateTime?>("Pedidofabrica")
                        .HasColumnType("datetime")
                        .HasColumnName("pedidofabrica");

                    b.Property<string>("Planos")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("planos");

                    b.HasKey("Id");

                    b.ToTable("ordentrabajo", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.PedidosPañol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Codigo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int?>("Insumo")
                        .HasColumnType("int")
                        .HasColumnName("insumo");

                    b.Property<int?>("Operario")
                        .HasColumnType("int")
                        .HasColumnName("operario");

                    b.HasKey("Id");

                    b.ToTable("PedidosPañol", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Personal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("categoria");

                    b.Property<string>("CondicionContractual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("condicionContractual");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("direccion");

                    b.Property<int?>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<int?>("Legajo")
                        .HasColumnType("int")
                        .HasColumnName("legajo");

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mail");

                    b.Property<string>("Nombres")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombres");

                    b.Property<string>("PremioEstablecido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("premioEstablecido");

                    b.Property<string>("Puesto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("puesto");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.ToTable("Personal", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Proveedore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Categorias")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("categorias");

                    b.Property<string>("Cp")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CP");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NombreEmpresa")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Observaciones")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Repuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Foto")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("StockMax")
                        .HasColumnType("int");

                    b.Property<int?>("StockMin")
                        .HasColumnType("int");

                    b.Property<int?>("StockReal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Repuesto", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.SalidasDePañol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Codigo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("codigo");

                    b.Property<int?>("IdDelMaterial")
                        .HasColumnType("int")
                        .HasColumnName("idDelMaterial");

                    b.Property<string>("TablaEnQueBuscar")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("tablaEnQueBuscar");

                    b.Property<string>("Usuario")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.ToTable("salidasDePañol", (string)null);
                });

            modelBuilder.Entity("AspNetRoleAspNetUser", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Shared.Models.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetRoleClaim", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserClaim", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserLogin", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserRole", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetRole", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Shared.Models.AspNetUser", "User")
                        .WithOne("AspNetUserRole")
                        .HasForeignKey("BlazorApp1.Shared.Models.AspNetUserRole", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserToken", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetUser", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetRole", b =>
                {
                    b.Navigation("AspNetRoleClaims");

                    b.Navigation("AspNetUserRoles");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUser", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserRole");

                    b.Navigation("AspNetUserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
