// <auto-generated />
using System;
using BlazorApp1.Server.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp1.Server.Migrations
{
    [DbContext(typeof(DiMetalloContext))]
    [Migration("20240408110728_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AspNetRoleAspNetUser", b =>
                {
                    b.Property<string>("RolesId")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("UsersId")
                        .HasColumnType("varchar(95)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("AspNetRoleAspNetUser");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(95)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.HasKey("UserId")
                        .HasName("PK_AspNetUserRoles_1");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Corredor")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Cp")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("CP");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("DomicilioEntrega")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("domicilioEntrega");

                    b.Property<string>("Expreso")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("NombreEmpresa")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.CondicionPago", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CondicionPago");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Cotizacione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Alcance")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("alcance");

                    b.Property<string>("Cantidad")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("cantidad");

                    b.Property<string>("Cliente")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("cliente");

                    b.Property<string>("Codigo")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("codigo");

                    b.Property<string>("Color")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("color");

                    b.Property<string>("Cotizaciones")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("cotizaciones");

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Fechaentrega")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaentrega");

                    b.Property<string>("Obra")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("obra");

                    b.Property<string>("Observaciones")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("observaciones");

                    b.Property<string>("Planos")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("Planos");

                    b.Property<string>("Referencia")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("referencia");

                    b.Property<string>("Remito")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("remito");

                    b.Property<string>("Tipo")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("Tipo");

                    b.Property<string>("Titulo")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("titulo");

                    b.Property<string>("Tratamientosuperficial")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("tratamientosuperficial");

                    b.Property<string>("Valordolar")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("valordolar");

                    b.Property<string>("Valorpeso")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("valorpeso");

                    b.HasKey("Id");

                    b.ToTable("cotizaciones", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("DNI");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastNames")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.EventosProduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Etapa")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("etapa");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int?>("Operario")
                        .HasColumnType("int")
                        .HasColumnName("operario");

                    b.Property<int?>("Ot")
                        .HasColumnType("int")
                        .HasColumnName("ot");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("EventosProduccion", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.FechasEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("FechasEventos");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Lotes")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Proveedor")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("ProveedoresPosibles")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Recepcion")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int?>("StockMax")
                        .HasColumnType("int");

                    b.Property<int?>("StockMin")
                        .HasColumnType("int");

                    b.Property<int?>("StockReal")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Insumo", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Lote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Alto")
                        .HasColumnType("int");

                    b.Property<int?>("Ancho")
                        .HasColumnType("int");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadIngreso")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<string>("NroRemito")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("OC")
                        .HasColumnType("int")
                        .HasColumnName("OC");

                    b.Property<int?>("Presupuesto")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("Proveedor")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.MaquinasHerramienta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Asignacion")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("DescripcionMantenimiento")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Disposicion")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaIngreso")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("MotivoDisposicion")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("MotivoEstado")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int?>("PeriodicidadMantenimiento")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimoMant")
                        .IsRequired()
                        .HasColumnType("datetime")
                        .HasColumnName("UltimoMant");

                    b.HasKey("Id");

                    b.ToTable("MaquinasHerramientas");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.MateriaPrima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int?>("StockMax")
                        .HasColumnType("int");

                    b.Property<int?>("StockMin")
                        .HasColumnType("int");

                    b.Property<int?>("StockReal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MateriaPrima", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Ordencompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Aprobada")
                        .HasColumnType("datetime")
                        .HasColumnName("aprobada");

                    b.Property<string>("Archivo")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("archivo");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Comentario")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("CondicionPago")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("condicionPago");

                    b.Property<string>("Especificacion")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("especificacion");

                    b.Property<string>("Estado")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Generada")
                        .HasColumnType("datetime")
                        .HasColumnName("generada");

                    b.Property<int?>("InfoInsumo")
                        .HasColumnType("int")
                        .HasColumnName("infoInsumo");

                    b.Property<int?>("Insumo")
                        .HasColumnType("int")
                        .HasColumnName("insumo");

                    b.Property<string>("Iva")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("IVA");

                    b.Property<string>("NroRemito")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Precio")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("precio");

                    b.Property<string>("PrecioUnitario")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("precioUnitario");

                    b.Property<int?>("Proveedor")
                        .HasColumnType("int")
                        .HasColumnName("proveedor");

                    b.Property<DateTime?>("Recepcionada")
                        .HasColumnType("datetime")
                        .HasColumnName("recepcionada");

                    b.HasKey("Id");

                    b.HasIndex("InfoInsumo");

                    b.HasIndex("Insumo");

                    b.HasIndex("Proveedor");

                    b.ToTable("ordencompra", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Ordentrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CaballetesInterruptores")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("CaballetesInterruptores");

                    b.Property<string>("CaballetesTermicas")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("CaballetesTermicas");

                    b.Property<string>("Cancamos")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("Cancamos");

                    b.Property<string>("Cantidad")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("cantidad");

                    b.Property<string>("ChapaBandejas")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("ChapaBandejas");

                    b.Property<string>("ChapaEstructura")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("ChapaEstructura");

                    b.Property<string>("ChapaPuertas")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("ChapaPuertas");

                    b.Property<string>("Cliente")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("cliente");

                    b.Property<string>("Codigo")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("codigo");

                    b.Property<string>("Color")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("color");

                    b.Property<string>("Contrafrentes")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("Contrafrentes");

                    b.Property<string>("Cotizaciones")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("Cotizaciones");

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.Property<string>("Despiece")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("despiece");

                    b.Property<string>("DobleMarcoInterno")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("DobleMarcoInterno");

                    b.Property<string>("Especificaciones")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("especificaciones");

                    b.Property<string>("Estado")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Fechaaplazada")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaaplazada");

                    b.Property<DateTime?>("Fechaentrega")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaentrega");

                    b.Property<string>("Fechas")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Insumosusados")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("insumosusados");

                    b.Property<string>("Lugarentrega")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("lugarentrega");

                    b.Property<string>("Obra")
                        .HasMaxLength(10)
                        .HasColumnType("char(10)")
                        .HasColumnName("obra")
                        .IsFixedLength();

                    b.Property<string>("Observaciones")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("observaciones");

                    b.Property<DateTime?>("Pedidofabrica")
                        .HasColumnType("datetime")
                        .HasColumnName("pedidofabrica");

                    b.Property<string>("PerfilesC1yC2")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("PerfilesC1yC2");

                    b.Property<string>("PerfilesOmega")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("PerfilesOmega");

                    b.Property<string>("Planos")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("planos");

                    b.Property<string>("Portaplanos")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("Portaplanos");

                    b.Property<string>("Referencia")
                        .HasMaxLength(10)
                        .HasColumnType("char(10)")
                        .HasColumnName("referencia")
                        .IsFixedLength();

                    b.Property<string>("RejillasVentilacion")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("RejillasVentilacion");

                    b.Property<string>("Remitos")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("Remitos");

                    b.Property<string>("SentidoPuertas")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("SentidoPuertas");

                    b.Property<string>("SistemasAisladores")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("SistemasAisladores");

                    b.Property<string>("Sobretecho")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("Sobretecho");

                    b.Property<string>("TapasPiso")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("TapasPiso");

                    b.Property<string>("TipoCierre")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("TipoCierre");

                    b.Property<string>("Titulo")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("titulo");

                    b.Property<string>("TrabaViento")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("TrabaViento");

                    b.Property<string>("Zocalo_Trineo")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("Zocalo_Trineo");

                    b.HasKey("Id");

                    b.ToTable("ordentrabajo", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.PedidosPañol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Codigo")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int?>("Insumo")
                        .HasColumnType("int")
                        .HasColumnName("insumo");

                    b.Property<int?>("Operario")
                        .HasColumnType("int")
                        .HasColumnName("operario");

                    b.HasKey("Id");

                    b.ToTable("PedidosPañol", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Personal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("categoria");

                    b.Property<string>("CondicionContractual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("condicionContractual");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("direccion");

                    b.Property<int?>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<int?>("Legajo")
                        .HasColumnType("int")
                        .HasColumnName("legajo");

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mail");

                    b.Property<string>("Nombres")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombres");

                    b.Property<string>("PremioEstablecido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("premioEstablecido");

                    b.Property<string>("Puesto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("puesto");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.ToTable("Personal", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFinReal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("Insumo")
                        .HasColumnType("int");

                    b.Property<int?>("Lote")
                        .HasColumnType("int");

                    b.Property<int?>("Maquina")
                        .HasColumnType("int");

                    b.Property<int?>("Operario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Insumo");

                    b.HasIndex("Maquina");

                    b.HasIndex("Operario");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Aprobada")
                        .HasColumnType("datetime")
                        .HasColumnName("aprobada");

                    b.Property<string>("Archivo")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("archivo");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Comentario")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("CondicionPago")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("condicionPago");

                    b.Property<string>("Especificacion")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("especificacion");

                    b.Property<string>("Estado")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("Generada")
                        .HasColumnType("datetime")
                        .HasColumnName("generada");

                    b.Property<int?>("InfoInsumo")
                        .HasColumnType("int")
                        .HasColumnName("infoInsumo");

                    b.Property<int?>("Insumo")
                        .HasColumnType("int")
                        .HasColumnName("insumo");

                    b.Property<string>("Iva")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("IVA");

                    b.Property<string>("NroRemito")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int?>("OC")
                        .HasColumnType("int")
                        .HasColumnName("OC");

                    b.Property<string>("Precio")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("precio");

                    b.Property<string>("PrecioUnitario")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("precioUnitario");

                    b.Property<int?>("Proveedor")
                        .HasColumnType("int")
                        .HasColumnName("proveedor");

                    b.Property<DateTime?>("Recepcionada")
                        .HasColumnType("datetime")
                        .HasColumnName("recepcionada");

                    b.HasKey("Id");

                    b.ToTable("Presupuesto", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Proveedore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Categorias")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("categorias");

                    b.Property<string>("Cp")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("CP");

                    b.Property<string>("Cuit")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Mail")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("NombreContacto")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("NombreEmpresa")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("RazonSocial")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Repuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int?>("StockMax")
                        .HasColumnType("int");

                    b.Property<int?>("StockMin")
                        .HasColumnType("int");

                    b.Property<int?>("StockReal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Repuesto", (string)null);
                });

            modelBuilder.Entity("AspNetRoleAspNetUser", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Shared.Models.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetRoleClaim", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserClaim", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserLogin", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserRole", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetRole", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Shared.Models.AspNetUser", "User")
                        .WithOne("AspNetUserRole")
                        .HasForeignKey("BlazorApp1.Shared.Models.AspNetUserRole", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUserToken", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.AspNetUser", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Ordencompra", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.Insumo", "InfoInsumoNavigation")
                        .WithMany("OrdencompraInfoInsumoNavigations")
                        .HasForeignKey("InfoInsumo")
                        .HasConstraintName("FK__ordencomp__infoI__02FC7413");

                    b.HasOne("BlazorApp1.Shared.Models.Insumo", "InsumoNavigation")
                        .WithMany("OrdencompraInsumoNavigations")
                        .HasForeignKey("Insumo")
                        .HasConstraintName("FK__ordencomp__insum__282DF8C2");

                    b.HasOne("BlazorApp1.Shared.Models.Proveedore", "ProveedorNavigation")
                        .WithMany("Ordencompras")
                        .HasForeignKey("Proveedor")
                        .HasConstraintName("FK__ordencomp__prove__2739D489");

                    b.Navigation("InfoInsumoNavigation");

                    b.Navigation("InsumoNavigation");

                    b.Navigation("ProveedorNavigation");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Prestamo", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.Insumo", "InsumoNavigation")
                        .WithMany("Prestamos")
                        .HasForeignKey("Insumo")
                        .HasConstraintName("FK__Prestamos__Insum__318258D2");

                    b.HasOne("BlazorApp1.Shared.Models.MaquinasHerramienta", "MaquinaNavigation")
                        .WithMany("Prestamos")
                        .HasForeignKey("Maquina");

                    b.HasOne("BlazorApp1.Shared.Models.Personal", "OperarioNavigation")
                        .WithMany("Prestamos")
                        .HasForeignKey("Operario")
                        .HasConstraintName("FK__Prestamos__Opera__32767D0B");

                    b.Navigation("InsumoNavigation");

                    b.Navigation("MaquinaNavigation");

                    b.Navigation("OperarioNavigation");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetRole", b =>
                {
                    b.Navigation("AspNetRoleClaims");

                    b.Navigation("AspNetUserRoles");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.AspNetUser", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserRole");

                    b.Navigation("AspNetUserTokens");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Insumo", b =>
                {
                    b.Navigation("OrdencompraInfoInsumoNavigations");

                    b.Navigation("OrdencompraInsumoNavigations");

                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.MaquinasHerramienta", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Personal", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Proveedore", b =>
                {
                    b.Navigation("Ordencompras");
                });
#pragma warning restore 612, 618
        }
    }
}
