@namespace BlazorApp1.Client.Shared

@inject NavigationManager Navigation

<style>
    .notification-bell {
        position: relative;
        display: inline-block;
    }

    .bell-icon {
        font-size: 24px;
        cursor: pointer;
    }

    .badge {
        position: absolute;
        top: -10px;
        right: -10px;
        background-color: red;
        color: white;
        border-radius: 50%;
        padding: 5px;
    }

    .dropdown-menu {
        display: none;
        position: absolute;
        background-color: white;
        box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.1);
    }

    .notification-bell:hover .dropdown-menu {
        display: block;
    }
</style>

<div class="notification-bell">
    <button><FeatherBell Color="blue" Size="24" /> </button>
    @if (notificacionesCount > 0)
    {
        <span class="badge">@notificacionesCount</span>
    }

    <ul class="dropdown-menu">
        @foreach (var notificacion in notificacionesNoLeidas)
        {
            <li>
                <a @onclick="() => MarcarComoLeida(notificacion.Id ?? 0)" href="@notificacion.UrlRedireccion">
                    <strong>@notificacion.Titulo</strong><br />
                    @notificacion.Descripcion
                </a>
            </li>
        }
    </ul>
</div>

@code {
    List<Notificaciones>? notificacionesNoLeidas = new();
    Notificaciones? notificacion = new();
    int notificacionesCount;

    protected override async Task OnInitializedAsync()
    {
        var rta = await http.GetFromJsonAsync<Respuesta<List<Notificaciones>>>("/api/notificaciones");
        notificacionesNoLeidas = rta.List;


        notificacionesCount = notificacionesNoLeidas.Count;
    }

    private async Task MarcarComoLeida(int notificacionId)
    {
        await http.PutAsJsonAsync<Notificaciones>("/api/notificaciones", notificacion);
        notificacionesCount--;
    }
}
