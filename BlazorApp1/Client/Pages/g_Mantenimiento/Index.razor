@page "/mantenimiento"
<br />
<button class="btn btn-outline-primary" @onclick="ComeBack"><FeatherArrowLeft Color="Blue"></FeatherArrowLeft></button>
<br />
<br />
<h1>Mantenimiento</h1>
<p>En esta sección se podrá gestionar el mantenimiento.</p>
<hr />
<br />
<br />


@if (oHerramientas != null && oMaquinas != null)
{
    <button style="outline:none; float: right;height:100%;" class="btn btn-outline" @onclick="() => CambiarModoFiltro()"><FeatherFilter Color="Black"></FeatherFilter></button>
    <br />
    <br />
<RadzenTabs Class="w-100 mx-auto" RenderMode="TabRenderMode.Client">
    <Tabs>
      <RadzenTabsItem Text="Herramientas">
            <RadzenDataGrid AllowFiltering="allowFiltering" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Simple" AllowSorting="true" PageSize="50"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" @ref="grid"
                    Data="@oHerramientas" TItem="MaquinasHerramienta" ColumnWidth="250px" LogicalFilterOperator="LogicalFilterOperator.Or">
        <Columns>
            <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="Codigo" Filterable="false" Title="Codigo" Width="50px" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="Descripcion" Title="Descripción" Width="100px" />
            <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="Marca" Title="Marca" Width="100px" />
            <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="MantenimientoPreventivo" Title="Mantenimiento preventivo" Width="100px">
                <Template Context="data">
                    @if (data.MantenimientoPreventivo != null && data.MantenimientoPreventivo.Value.Day == DateTime.Now.Day)
                    {
                        <a>@data.MantenimientoPreventivo</a>
                    }
                    else
                    {
                        <a>No realizado</a>

                    }
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="FechaIngreso" Title="Fecha de ingreso" Width="100px">
                <Template Context="data">
                    @if (data.FechaIngreso.HasValue)
                    {
                        <a>@data.FechaIngreso.Value.ToString("dd/MM/yyyy")</a>
                    }
                </Template>
            </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="" Title="" Filterable="false" Width="30px">
                        <Template Context="data">
                            <button class="btn" title="Mantenimiento" @onclick="() => AddMantenimiento(data.Id)"><FeatherTool Color="blue" /></button>
                        </Template>
                    </RadzenDataGridColumn>
           

        </Columns>
    </RadzenDataGrid>

    </RadzenTabsItem>
             <RadzenTabsItem Text="Maquinas">

            <RadzenDataGrid AllowFiltering="allowFiltering" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Simple" AllowSorting="true" PageSize="50"
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" @ref="grid"
                            Data="@oMaquinas" TItem="MaquinasHerramienta" ColumnWidth="250px" LogicalFilterOperator="LogicalFilterOperator.Or">
                <Columns>
                    <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="Codigo" Filterable="false" Title="Codigo" Width="50px" TextAlign="TextAlign.Center" />
                    <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="Descripcion" Title="Descripción" Width="100px" />
                    <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="Marca" Title="Marca" Width="100px" />
                    <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="MantenimientoPreventivo" Title="Mantenimiento preventivo" Width="100px">
                        <Template Context="data">
                            @if (data.MantenimientoPreventivo != null && data.MantenimientoPreventivo.Value.Day == DateTime.Now.Day)
                            {
                                <a>@data.MantenimientoPreventivo</a>
                            }
                            else
                            {
                                <a>No realizado</a>

                            }
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="FechaIngreso" Title="Fecha de ingreso" Width="100px">
                        <Template Context="data">
                            @if (data.FechaIngreso.HasValue)
                            {
                                <a>@data.FechaIngreso.Value.ToString("dd/MM/yyyy")</a>
                            }
                        </Template>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="MaquinasHerramienta" Property="" Title="" Filterable="false" Width="30px">
                        <Template Context="data">
                            <button class="btn" title="Eliminar" @onclick="() => AddMantenimiento(data.Id)"><FeatherTool Color="blue" /></button>
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
            </RadzenTabsItem>
     </Tabs>

    </RadzenTabs>
}
else
{
    <br />
    <center>
        <div class="mb-2">
            <RadzenProgressBar Value="100" ShowValue="false" ProgressBarStyle="ProgressBarStyle.Secondary" Mode="ProgressBarMode.Indeterminate" />
        </div>
    </center>
}




@code {


    [CascadingParameter] public IModalService Modal { get; set; } = default!;
    List<MaquinasHerramienta> oHerramientas = new();
    List<MaquinasHerramienta> oMaquinas = new();

    RadzenDataGrid<MaquinasHerramienta>? grid;
    int currentPage;
    bool allowFiltering = false;

    protected override async Task OnInitializedAsync()
    {
        await Get();
    }

    public void CambiarModoFiltro()
    {
        allowFiltering = !allowFiltering;
        StateHasChanged();
    }

    async Task gotoinfo(int id)
    {
        currentPage = grid.CurrentPage;
        nav.NavigateTo($"/infoherramienta/{id}");
        await grid.GoToPage(currentPage);
    }

    async Task Get()
    {
        var respuesta = await http.GetFromJsonAsync<Respuesta<List<MaquinasHerramienta>>>("/api/Maquinas");
        oHerramientas = respuesta.List.Where(x => x.Codigo.StartsWith("H-")).ToList();
        oMaquinas = respuesta.List.Where(x => !x.Codigo.StartsWith("H-")).ToList();

        StateHasChanged();
    }

    


    async Task AddMantenimiento(int id)
    {

        var parameters = new ModalParameters();

        var options = new ModalOptions()
            {
                HideHeader = true,
            };
        parameters.Add(nameof(Mantenimiento.id), id);

        var formModal = Modal.Show<Mantenimiento>("Generar mantenimiento preventivo", parameters, options);
        var result = await formModal.Result;
        if (result.Cancelled)
        {
            Console.WriteLine("Modal was cancelled");
        }
        else if (result.Data != null)
        {
            await Get();
        }


    }
    public void ComeBack()
    {
        nav.NavigateTo("/");
    }
}