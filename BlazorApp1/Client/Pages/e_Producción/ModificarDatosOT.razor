@if (oTrabajo != null)
{
    <div class="card">
        <div class="card-body">

            <EditForm Model="@oTrabajo" OnValidSubmit="Guardar">
                <DataAnnotationsValidator />

                <div class="row">
                    <div class="col-sm-6">
                        <label>Tipo Cambio</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.TipoCambio" placeholder="Tipo Cambio" />
                        <ValidationMessage For="(() => oTrabajo.TipoCambio)" style="color:red;" />
                    </div>
                    <div class="col-sm-6">
                        <label>OC</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.OC" placeholder="OC" />
                        <ValidationMessage For="(() => oTrabajo.OC)" style="color:red;" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-6">
                        <label>Porcentaje Adelanto</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.PorcentajeAdelanto" placeholder="Porcentaje Adelanto" />
                        <ValidationMessage For="(() => oTrabajo.PorcentajeAdelanto)" style="color:red;" />
                    </div>
                    <div class="col-sm-6">
                        <label>Nro Factura</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.NroFactura" placeholder="Nro Factura" />
                        <ValidationMessage For="(() => oTrabajo.NroFactura)" style="color:red;" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-6">
                        <label>Pago</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.Pago" placeholder="Pago" />
                        <ValidationMessage For="(() => oTrabajo.Pago)" style="color:red;" />
                    </div>
                    <div class="col-sm-6">
                        <label>Porcentaje Facturado</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.PorcentajeFacturado" placeholder="Porcentaje Facturado" />
                        <ValidationMessage For="(() => oTrabajo.PorcentajeFacturado)" style="color:red;" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-6">
                        <label>Nro Factura Parcial</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.NroFacturaParcial" placeholder="Nro Factura Parcial" />
                        <ValidationMessage For="(() => oTrabajo.NroFacturaParcial)" style="color:red;" />
                    </div>
                    <div class="col-sm-6">
                        <label>Pago Parcial</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.PagoParcial" placeholder="Pago Parcial" />
                        <ValidationMessage For="(() => oTrabajo.PagoParcial)" style="color:red;" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-6">
                        <label>Pesos</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.Pesos" placeholder="Pesos" />
                        <ValidationMessage For="(() => oTrabajo.Pesos)" style="color:red;" />
                    </div>
                    <div class="col-sm-6">
                        <label>Dólar</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.Dolar" placeholder="Dólar" />
                        <ValidationMessage For="(() => oTrabajo.Dolar)" style="color:red;" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-6">
                        <label>Valor Anticipo</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.ValorAnticipo" placeholder="Valor Anticipo" />
                        <ValidationMessage For="(() => oTrabajo.ValorAnticipo)" style="color:red;" />
                    </div>
                    <div class="col-sm-6">
                        <label>Valor Saldo</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.ValorSaldo" placeholder="Valor Saldo" />
                        <ValidationMessage For="(() => oTrabajo.ValorSaldo)" style="color:red;" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-6">
                        <label>Nro Remito</label>
                        <InputText class="form-control" @bind-Value="@oTrabajo.NroRemito" placeholder="Nro Remito" />
                        <ValidationMessage For="(() => oTrabajo.NroRemito)" style="color:red;" />
                    </div>
                    <div class="col-sm-6">
                        <label>Comentario</label>
                        <InputTextArea class="form-control" @bind-Value="@oTrabajo.Comentario" placeholder="Comentario" />
                        <ValidationMessage For="(() => oTrabajo.Comentario)" style="color:red;" />
                    </div>
                </div>
                <br />

                <button type="button" @onclick="cancel" class="btn btn-light">Cancelar</button>
                <button type="submit" class="btn btn-primary mr-2" disabled="@disable">Aceptar</button>

            </EditForm>
        </div>
    </div>
}
else
{
    <br />
    <center>
        <div class="mb-2">
            <RadzenProgressBar Value="100" ShowValue="false" ProgressBarStyle="ProgressBarStyle.Secondary" Mode="ProgressBarMode.Indeterminate" />
        </div>
    </center>
}


@code {
    bool disable;

    Ordentrabajo? oTrabajo = new Ordentrabajo();
    Respuesta<Ordentrabajo>? oRtaTrabajo = new();

    [CascadingParameter] BlazoredModalInstance? ModalInstance { get; set; }
    [Parameter] public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        disable = false;


        if (id != 0)
        {
            oRtaTrabajo = await http.GetFromJsonAsync<Respuesta<Ordentrabajo>>($"/api/ot/{id}");
            oTrabajo = oRtaTrabajo.List;

        }
    }

    private async Task Guardar()
    {
        if (oTrabajo != null)
        {
            var response = await http.PutAsJsonAsync<Ordentrabajo>($"/api/ot", oTrabajo);
            if (response.IsSuccessStatusCode)
            {
                await ModalInstance.CloseAsync(ModalResult.Ok());
            }
            else
            {
                // Manejar el error
            }
        }
    }

    async Task cancel()
    {
        await ModalInstance.CloseAsync(ModalResult.Cancel());

    }
}
