@page "/PresupuestosAsociados/{id:int}"

@using System.Globalization

<button class="btn btn-outline-primary" @onclick="ComeBack"><FeatherArrowLeft Color="Blue"></FeatherArrowLeft></button>
<br />
<br />

<RadzenText TextStyle="TextStyle.H6" class="rz-color-on-primary-black"><strong>Presupuestos Asociados de @insumo.Descripcion</strong></RadzenText>


<div class="rz-p-sm-12">




    @if (items != null)
                    {
        <button style="outline:none; float: right;height:100%;" class="btn btn-outline" @onclick="() => CambiarModoFiltro()"><FeatherFilter Color="Black"></FeatherFilter></button>
        <br />
        <br />


        <RadzenDataGrid FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="allowFiltering" AllowColumnResize="true" AllowAlternatingRows="true" FilterMode="FilterMode.Simple"
                        AllowSorting="false" PageSize="50" AllowPaging="true" ShowPagingSummary="true" @ref="grid" Density="Density.Compact"
                        Data="@items" TItem="ItemPresupuesto" ColumnWidth="50px" LogicalFilterOperator="LogicalFilterOperator.Or">
            <Columns>
                <RadzenDataGridColumn TItem="ItemPresupuesto" Property="CondicionPago" Title="Forma de pago" Width="10%" Filterable="false" />
                <RadzenDataGridColumn TItem="ItemPresupuesto" Property="Observacion" Title="Observacion" Width="10%" Filterable="false" />
                <RadzenDataGridColumn TItem="ItemPresupuesto" Property="Proveedor" Title="Estado" Width="10%" Filterable="false">
                     <Template Context="data">
                        <p> @(proveedores.List.Where(x => x.Id == data.Proveedor).FirstOrDefault().NombreFantasia)  </p>
                     
                     </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="ItemPresupuesto" Property="Cantidad" Title="Cantidad" Width="10%" Filterable="false" />
                <RadzenDataGridColumn TItem="ItemPresupuesto" Property="PrecioUnitario" Title="Precio unitario" Width="10%" Filterable="false" />
                <RadzenDataGridColumn TItem="ItemPresupuesto" Property="Precio" Title="Precio total" Width="10%" Filterable="false">
                    <Template Context="data">
                        @(double.Parse(data.Precio, new CultureInfo("fr-FR")).ToString())
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="ItemPresupuesto" Property="Estado" Title="Estado" Width="10%" Filterable="false" />

            </Columns>
        </RadzenDataGrid>
         
            
        }
        
</div>


@code {
    bool allowFiltering = false;


    List<ItemPresupuesto>? items = new();

    Respuesta<List<ItemPresupuesto>>? oRta = new();

    Insumo insumo = new();

    Respuesta<List<ProveedoreDTO>> proveedores = new();

    [Parameter] public int? id { get; set; }

    RadzenDataGrid<ItemPresupuesto>? grid;



    protected override async Task OnInitializedAsync()
    {

        
        insumo = await http.GetFromJsonAsync<Insumo>($"/api/Insumo/{id}");

        proveedores = await http.GetFromJsonAsync<Respuesta<List<ProveedoreDTO>>>($"/api/proveedore");


        oRta = await http.GetFromJsonAsync<Respuesta<List<ItemPresupuesto>>>($"/api/ItemPresupuesto");
        items = oRta.List.Where(x => x.Insumo == id && x.Estado == "Creada").ToList();

     
        StateHasChanged();
    }
    
    

    public void CambiarModoFiltro()
    {
        allowFiltering = !allowFiltering;
        StateHasChanged();
    }

    async Task ComeBack()
    {
        nav.NavigateTo("/bienes");
    }
    
}
