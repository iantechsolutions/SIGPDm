<h3><strong> Orden de compra @id</strong></h3>

<div class="row">
    <!-- Primera fila -->
    <div class="col-sm-3">
        <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Proveedor</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1"><b>@Proveedores?.Where(x => x.Id == oOrdencompra?.Proveedor).First().RazonSocial</b></RadzenText>
    </div>
    <div class="col-sm-3">
        <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Precio Total</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1"><a>@oOrdencompra?.Precio</a></RadzenText>
    </div>
    <div class="col-sm-3">
        <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Moneda</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1">@oOrdencompra?.Moneda</RadzenText>
    </div>
    <div class="col-sm-3">
        <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Detalle de la orden</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1">@oOrdencompra?.Comentario</RadzenText>
    </div>
</div>

<div class="row mt-3">
    <!-- Segunda fila -->
    <div class="col-sm-3">
        <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Generada</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1"><b>@oOrdencompra?.Generada</b></RadzenText>
    </div>
    <div class="col-sm-3">
        <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Condición de pago</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1">@oOrdencompra?.CondicionPago</RadzenText>
    </div>
    <div class="col-sm-3">
        <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">IVA</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1">@oOrdencompra?.Iva</RadzenText>
    </div>
    <div class="col-sm-3">
        <!-- Espacio reservado o contenido adicional -->
    </div>
</div>

@if (oPresupuestos != null)
{
    <RadzenDataGrid FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="allowFiltering" AllowColumnResize="true" AllowAlternatingRows="true" FilterMode="FilterMode.Simple"
                    AllowSorting="false" PageSize="50" AllowPaging="true" ShowPagingSummary="true" @ref="grid"
                    Data="@oPresupuestos" TItem="ItemPresupuesto" ColumnWidth="50px" LogicalFilterOperator="LogicalFilterOperator.Or">
        <Columns>
            <RadzenDataGridColumn TItem="ItemPresupuesto" Property="Codigo" Title="Codigo" Width="10%">
                <Template Context="data">
                    <a>@($"{data.Codigo}")</a>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="ItemPresupuesto" Property="" Title="Insumo" Filterable="false" Width="20%">
                <Template Context="data">
                    <p>@oInsumo.Where(x => x.Id == data.Insumo).FirstOrDefault().Descripcion</p>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="ItemPresupuesto" Property="Observacion" Title="Especificación" Width="20%" />

            <RadzenDataGridColumn TItem="ItemPresupuesto" Property="Cantidad" Title="Cantidad" Width="10%" />
            <RadzenDataGridColumn TItem="ItemPresupuesto" Property="PrecioUnitario" Title="Precio Unitario" Width="10%">
                <Template Context="data">
                    <p>$ @data.PrecioUnitario</p>

                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="ItemPresupuesto" Property="Precio" Title="Precio total" Width="20%">
                <Template Context="data">
                    <p>$ @data.Precio</p>
                </Template>
            </RadzenDataGridColumn>
            
        </Columns>
    </RadzenDataGrid>
}
else
{
    <br />
    <center>
        <div class="mb-2">
            <RadzenProgressBar Value="100" ShowValue="false" ProgressBarStyle="ProgressBarStyle.Secondary" Mode="ProgressBarMode.Indeterminate" />
        </div>
    </center>
}
       



@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public int id { get; set; }
    List<Insumo>? oInsumo = new ();
    List<ProveedoreDTO>? Proveedores = new();

    OrdencompraDTO? oOrdencompra = new();
    Respuesta<OrdencompraDTO>? oRta = new();

    List<ItemPresupuesto>? oPresupuestos = new();

    bool allowFiltering = false;
    RadzenDataGrid<ItemPresupuesto>? grid;

    

    protected override async Task OnInitializedAsync()
    {

        oRta = await http.GetFromJsonAsync<Respuesta<OrdencompraDTO>>($"/api/OC/{id}");
        oOrdencompra = oRta.List;

        
        var ort = await http.GetFromJsonAsync < Respuesta<List<Insumo>>>("/api/Insumo");
        oInsumo = ort.List;

        var prov = await http.GetFromJsonAsync<Respuesta<List<ProveedoreDTO>>>("/api/Proveedore");
        Proveedores = prov.List;

        var rta = await http.GetFromJsonAsync<Respuesta<List<ItemPresupuesto>>>("/api/itempresupuesto");
        oPresupuestos = rta.List.Where(x => x.OC == id).ToList();

        // @oPresupuestos.Where(x => x.Id == data.Id).Sum(x => x.Precio);
        
    }
    async Task cancel()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok($"Form was cancelled"));

    }
}