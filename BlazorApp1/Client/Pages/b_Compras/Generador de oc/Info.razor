<RadzenCard Class="m-3">
    <strong> <RadzenText>Insumo: @oOrdencompra.InsumoNavigation.Descripcion </RadzenText></strong>
    <div class="row">
       
       <br />
       
        
        
        <div class="col">
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Generada:</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oOrdencompra.Generada</b></RadzenText>
                </div>
        <div class="col">
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Aprobación:</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oOrdencompra.Aprobada</b></RadzenText>

                </div>
        <div class="col">
            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Recepción:</RadzenText>
            <RadzenText TextStyle="TextStyle.Body1"><b>@oOrdencompra.Recepcionada</b></RadzenText>

        </div>
    </div>
    <div class="row">

        <br />
        <div class="col">
            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Cantidad recibida:</RadzenText>
            <RadzenText TextStyle="TextStyle.Body1"><b>@oOrdencompra.Cantidad</b></RadzenText>
        </div>
        <div class="col">
            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Comentario:</RadzenText>
            <RadzenText TextStyle="TextStyle.Body1"><b>@oOrdencompra.Comentario</b></RadzenText>

        </div>
    </div>
    

</RadzenCard>

@code {
    OrdencompraDTO oOrdencompra = new();
    Respuesta<OrdencompraDTO> oRta = new();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (id != 0)
        {
            oRta = await http.GetFromJsonAsync<Respuesta<OrdencompraDTO>>($"/api/OC/{id}");
            oOrdencompra = oRta.List;
        }
    }
    async Task cancel()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok($"Form was cancelled"));

    }
}