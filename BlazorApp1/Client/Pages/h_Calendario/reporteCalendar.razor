@page "/reportecalendar"
@using System.Globalization;
@inject IJSRuntime _js

<style>
    @@media print {
    .no-print {
        display: none !important;
    }

    .sidebar {
        display: none !important;
    }

    .col {
        width: 14.28%;
        float: left;
    }

    .rz-card{
        break-inside: avoid
    }

    .semana {
        break-inside: avoid;
    }
    }

    .text {
        overflow-wrap: break-word;
        max-width: 255px;
    }

    .col {
        min-width: 14.28% !important;
    }

</style>


<br class="no-print" />
<br />
<b class="font-size:15px">Reporte de Calendario</b>
<br class="no-print"/>
<br class="no-print" />
<RadzenDatePicker class="no-print" @bind-Value=@fechaInicio ShowTime="false" Disabled="generado" DateFormat="dd/MM/yyyy" />

<RadzenDatePicker class="no-print" @bind-Value=@fechaFinal ShowTime="false" Disabled="generado" DateFormat="dd/MM/yyyy" />

&nbsp
<RadzenButton class="btn btn-outline-info btn-sm no-print" Click="@(() => generar())">Generar Reporte</RadzenButton>
<button style="outline:none; float: right;height:100%;" class="btn btn-outline no-print" @onclick="() => Print()"><FeatherPrinter Color="Black"></FeatherPrinter></button>
<br class="no-print"/>
<br class="no-print" />
<div class="reporte">
@if (generado)
{
    <div class="row">
    @for (DateTime fecha = fechaInicioCalendario; fecha <= fechaFinalCalendario; fecha = fecha.AddDays(1))
    {
        <div class="col semana">
        <b style="font-size:12px">&nbsp;@fecha.ToString("dddd dd", infoCultural)</b>
        @if (eventos.Where(x => x.Fechaaplazada.Value.Date == fecha.Date).Count()>0)
        {
            @foreach (Ordentrabajo ot in eventos.Where(x => x.Fechaaplazada.Value.Date == fecha.Date))
            {
                <RadzenCard Style="@Maxcuadrado">
                    <strong> -Codigo: </strong>
                    <p class="text" TextStyle="TextStyle.Body2">&nbsp&nbsp@($"OT{ot.Codigo}")</p>
                    <strong> -Cliente: </strong>
                    <p class="text" TextStyle="TextStyle.Body2" >&nbsp&nbsp@(ot.Cliente)</p>
                    <strong> -Etapa: </strong>
                    <p class="text" TextStyle="TextStyle.Body2">&nbsp&nbsp@(ot.Estado)</p>
                </RadzenCard>
                <br/>
                } 
            }
        else
        {
            <br/>
            <strong style="font-size:8px">&nbspNo hay eventos</strong>
        }
        </div>
        }
    </div>
}
</div>

@code {
    DateTime fechaInicio = DateTime.Now.AddDays(-6);
    DateTime fechaFinal = DateTime.Now;
    DateTime fechaInicioCalendario = new();
    DateTime fechaFinalCalendario = new();
    bool generado = false;
    CultureInfo infoCultural = new CultureInfo("es-MX");
    string[] newNames = { "Lunes", "Martes", "Mier.", "Jueves", "Viernes", "Sabado", "Domingo" };
    List<Ordentrabajo> eventos = new();
    int cuadrados = 0;
    int maximo = 0;
    string Maxcuadrado = "";
    async Task generar()
    {
        infoCultural.DateTimeFormat.DayNames = newNames;
        fechaInicioCalendario = fechaInicio;
        fechaFinalCalendario = fechaFinal;
        var inicio = fechaInicio.Ticks;
        var final = fechaFinal.Ticks;   
        var r = await http.GetFromJsonAsync<Respuesta<List<Ordentrabajo>>>($"/api/ot/{inicio}/{final}");
        eventos = r.List;
        @for (DateTime fecha = fechaInicioCalendario; fecha <= fechaFinalCalendario; fecha = fecha.AddDays(1))
        {
            @foreach (Ordentrabajo ot in eventos.Where(x => x.Fechaaplazada.Value.Date == fecha.Date))
            {
                cuadrados += 1;    
            }
            if (cuadrados > maximo)
            {
                maximo = cuadrados;
            }
            cuadrados = 0;
        }
        Maxcuadrado = $"overflow:hidden;max-height:{(100 / maximo)-0.8}% !important;font-size:{Math.Round((double)(250 / maximo))}% !important;padding-top:4px;padding-bottom:4px;padding-left:6px;padding-right:6px";
        generado = true;
    }

    private async Task Print()
        => await _js.InvokeVoidAsync("window.print");

}
