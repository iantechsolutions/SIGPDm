@page "/reportecalendar"
@using System.Globalization;
@inject IJSRuntime _js

<style>
    @@media print {
    .no-print {
        display: none !important;
    }

    .sidebar {
        display: none !important;
    }
    .col-sm{
        max-width:330px !important;
        break-inside: avoid;
    }

    
    }

    .text {
        overflow-wrap: break-word;
        max-width: 255px;
    }
    
</style>


<br />
<br />
<h4>Reporte de Calendario</h4>
<br />

<RadzenDatePicker class="no-print" @bind-Value=@fechaInicio ShowTime="false" DateFormat="dd/MM/yyyy" />

<RadzenDatePicker class="no-print" @bind-Value=@fechaFinal ShowTime="false" DateFormat="dd/MM/yyyy" />

&nbsp
<RadzenButton class="btn btn-outline-info btn-sm no-print" Click="@(() => generar())">Generar Reporte</RadzenButton>
<button style="outline:none; float: right;height:100%;" class="btn btn-outline no-print" @onclick="() => Print()"><FeatherPrinter Color="Black"></FeatherPrinter></button>
<br/>
<br />
@if (generado)
{
    for (DateTime fecha = fechaInicioCalendario; fecha <= fechaFinalCalendario; fecha = fecha.AddDays(1))
    {
        <h5>@fecha.ToString("D", infoCultural)</h5>
        if (eventos.Where(x => x.Fechaaplazada.Value.Date == fecha.Date).Count()>0)
        {
            @for (int i = 0; i < eventos.Count(); i = i + 4)
            {
                <div class="row">
                @foreach (var ot in eventos.Where(x => x.Fechaaplazada.Value.Date == fecha.Date).Skip(i).Take(4))
                {
                    <RadzenCard Class="col-sm" >
                        <RadzenText TextStyle="TextStyle.H2" style="font-size: 12pt;font-weight:900" Class="d-flex mt-1 mb-0">-Codigo de orden: </RadzenText>
                        <RadzenText class="text" TextStyle="TextStyle.Body1" style="font-size: 10pt">&nbsp&nbsp@($"OT{ot.Codigo}")</RadzenText>
                        <RadzenText TextStyle="TextStyle.H2" style="font-size: 12pt;font-weight:900" Class="d-flex mt-1 mb-0">-Etapa actual: </RadzenText>
                        <RadzenText class="text" TextStyle="TextStyle.Body1" style="font-size: 10pt">&nbsp&nbsp@(ot.Estado)</RadzenText>
                        <RadzenText TextStyle="TextStyle.H2" style="font-size: 12pt;font-weight:900" Class="d-flex mt-1 mb-0">-Descripcion: </RadzenText>
                        <RadzenText class="text" TextStyle="TextStyle.Body1" style="font-size: 10pt">&nbsp&nbsp@(ot.Descripcion)</RadzenText>
                        <RadzenText TextStyle="TextStyle.H2" style="font-size: 12pt;font-weight:900" Class="d-flex mt-1 mb-0">-Fecha de entrega: </RadzenText>
                        <RadzenText class="text" TextStyle="TextStyle.Body1" style="font-size: 10pt">&nbsp&nbsp@(ot.Fechaaplazada.Value.ToString("D", infoCultural))</RadzenText>
                    </RadzenCard>
                    @:&nbsp;&nbsp;&nbsp;
                    }
                    
                </div>
                
            }
            <br />
            <br />
        }
        else
        {
            <RadzenText TextStyle="TextStyle.H2" style="font-size: 12pt;font-weight:900">&nbsp&nbspNo hay eventos</RadzenText>
        }
    }
}


@code {
    DateTime fechaInicio = DateTime.Now;
    DateTime fechaFinal = DateTime.Now;
    DateTime fechaInicioCalendario = new();
    DateTime fechaFinalCalendario = new();
    bool generado = false;
    CultureInfo infoCultural = new CultureInfo("es-MX");
    string[] newNames = { "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo" };
    List<Ordentrabajo> eventos = new();

    async Task generar()
    {
        infoCultural.DateTimeFormat.DayNames = newNames;
        fechaInicioCalendario = fechaInicio;
        fechaFinalCalendario = fechaFinal;
        var inicio = fechaInicio.Ticks;
        var final = fechaFinal.Ticks;   
        var r = await http.GetFromJsonAsync<Respuesta<List<Ordentrabajo>>>($"/api/ot/{inicio}/{final}");
        eventos = r.List;
        generado = true;
        Console.WriteLine(eventos.Count());
    }

    private async Task Print()
        => await _js.InvokeVoidAsync("window.print");
}
