@page "/organigrama"
@using System.Net.Http.Headers

<style>
    .img1 {
        height: 75%;
    }
</style>
<br />
<button class="btn btn-outline-primary" @onclick="ComeBack"><FeatherArrowLeft Color="Blue"></FeatherArrowLeft></button>
<br />
<br />
<InputFile OnChange="@OnInputFileChange" multiple />
<br />
<br />
<button type="submit" class="btn btn-primary" @onclick="Upload">Agregar organigrama</button>
<br />
<center>
    <img class="img1" src="/imagenes/organigrama.png">
</center>
@code {
    MultipartFormDataContent content = new MultipartFormDataContent();
    private int maxAllowedFiles = 3;
    private List<UploadResult> uploadResults = new();
    private List<File> files = new();

    async Task ComeBack()
    {
        nav.NavigateTo("/administracion");
    }


    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        long maxFileSize = 1024 * 1500000;

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            if (uploadResults.SingleOrDefault(
                f => f.FileName == file.Name) is null)
            {
                try
                {
                    var fileContent =
                        new StreamContent(file.OpenReadStream(maxFileSize));

                    fileContent.Headers.ContentType =
                        new MediaTypeHeaderValue(file.ContentType);

                    files.Add(new() { Name = file.Name });

                    content.Add(
                        content: fileContent,
                        name: "\"files\"",
                        fileName: file.Name);

                }
                catch (Exception ex)
                {


                    uploadResults.Add(
                        new()
                            {
                                FileName = file.Name,
                                ErrorCode = 6,
                                Uploaded = false
                            });
                }
            }
        }

    }
    private async Task Upload()
    {
        var client = ClientFactory.CreateClient();
        client.BaseAddress = new Uri($"{nav.BaseUri}api/images/organigrama");
        var response =
            await client.PostAsync(client.BaseAddress,
            content);

        if (response.IsSuccessStatusCode)
        {
            var options = new JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true,
                };

            using var responseStream =
                await response.Content.ReadAsStreamAsync();

            var newUploadResults = await JsonSerializer
                .DeserializeAsync<IList<UploadResult>>(responseStream, options);

            if (newUploadResults is not null)
            {
                uploadResults = uploadResults.Concat(newUploadResults).ToList();
            }
        }
        StateHasChanged();
        
        nav.NavigateTo("/organigrama", true);

    }
    private class File
    {
        public string? Name { get; set; }
    }
}