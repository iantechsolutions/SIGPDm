<div class="card">
    <div class="card-body">

        <EditForm Model="@oMaquinasHerramienta" OnSubmit="Guardar">
            <DataAnnotationsValidator />

            <div class="row" style="width=100%;">
                <div class="col-sm-4">
                    <label>Nombre</label>
                    <InputText @bind-Value="@oMaquinasHerramienta.Nombre" class="form-control" placeholder="Nombre"></InputText>
                    <ValidationMessage For="(()=> oMaquinasHerramienta.Nombre)" style="color:red;" />
                </div>
                <div class="col-sm-4">
                    <label>Marca</label>
                    <InputText @bind-Value="@oMaquinasHerramienta.Marca" class="form-control" placeholder="Marca"></InputText>
                    <ValidationMessage For="(()=> oMaquinasHerramienta.Marca)" style="color:red;" />
                </div>
                <div class="col-sm-4">
                    <label class="col-sm">Descripción</label>
                    <InputText @bind-Value="@oMaquinasHerramienta.Descripcion" class="form-control" placeholder="Descripción"></InputText>
                    <ValidationMessage For="(()=> oMaquinasHerramienta.Descripcion)" style="color:red;" />
                </div>
            </div>
            <br />
            <div class="row" style="width=100%;">
                <div class="col-sm-4">
                    <label>Código</label>
                    <InputText class="form-control" @bind-Value="@oMaquinasHerramienta.Codigo" placeholder="Código"></InputText>
                    <ValidationMessage For="(()=> oMaquinasHerramienta.Codigo)" style="color:red;" />
                </div>
               @*  <div class="col-sm-8">
                    <label class="col-sm">Periodicidad del mantenimiento en dias</label>
                    <InputNumber @bind-Value="@oMaquinasHerramienta.PeriodicidadMantenimiento" class="form-control" placeholder="Periodicidad del mantenimiento"></InputNumber>
                    <ValidationMessage For="(()=> oMaquinasHerramienta.PeriodicidadMantenimiento)" style="color:red;" />
                </div> *@
                <div class="col-sm-4">
                    <label class="col-sm">Estado</label>
                    <RadzenDropDown class="form-control" TValue="string" Data=@(estado) placeholder="Estado" @bind-Value=@oMaquinasHerramienta.Estado />
                    <ValidationMessage For="(()=> oMaquinasHerramienta.Estado)" style="color:red;" />
                </div>
                <div class="col-sm-4">
                    <label class="col-sm">Motivo estado</label>
                    <InputText @bind-Value="@oMaquinasHerramienta.MotivoEstado" class="form-control" placeholder="Motivo estado"></InputText>
                    <ValidationMessage For="(()=> oMaquinasHerramienta.MotivoEstado)" style="color:red;" />
                </div>
            </div>
            <br />
            <div class="row" style="width=100%;">
                <div class="col-sm-4">
                    <label class="col-sm">Fecha de ingreso</label>
                    <InputDate @bind-Value="@oMaquinasHerramienta.FechaIngreso" class="form-control" placeholder="Fecha de ingreso"></InputDate>
                    <ValidationMessage For="(()=> oMaquinasHerramienta.FechaIngreso)" style="color:red;" />
                </div>
                <div class="col-sm-4">
                    <label>Cantidad</label>
                    <InputNumber class="form-control" @bind-Value="@oMaquinasHerramienta.Cantidad" placeholder="Cantidad"></InputNumber>
                    <ValidationMessage For="(()=> oMaquinasHerramienta.Cantidad)" style="color:red;" />
                </div>
                <div class="col-sm-4">
                    <label class="col-sm">Asignación</label>
                    <InputText @bind-Value="@oMaquinasHerramienta.Asignacion" class="form-control" placeholder="Asignación"></InputText>
                    <ValidationMessage For="(()=> oMaquinasHerramienta.Asignacion)" style="color:red;" />
                </div>
            </div>
            <br />
            <div class="row" style="width=100%;">
               @*  <div class="col-sm-4">
                    <label>Cantidad</label>
                    <InputNumber class="form-control" @bind-Value="@oMaquinasHerramienta.Cantidad" placeholder="Cantidad"></InputNumber>
                    <ValidationMessage For="(()=> oMaquinasHerramienta.Cantidad)" style="color:red;" />
                </div> *@
               
            </div>

            <button type="submit" class="btn btn-primary mr-2" disabled=@disable>Aceptar</button>
            <button type="button" @onclick="cancel" class="btn btn-light">Cancelar</button>
        </EditForm>
    </div>
</div>


@code {
    bool disable;
    MaquinasHerramienta oMaquinasHerramienta = new();
    Respuesta<MaquinasHerramienta> oRta = new();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public int id { get; set; }
    List<string> estado = new() { "Alta", "Baja" };
    List<string> disposicion = new() { "Opcion 1", "Opcion 2" };

    protected override async Task OnInitializedAsync()
    {
        await Get();

    }


    public async Task Get()
    {
        disable = false;
        if (id != 0)
        {
            oRta = await http.GetFromJsonAsync<Respuesta<MaquinasHerramienta>>($"/api/maquinas/{id}");
            oMaquinasHerramienta = oRta.List;


        }
        else
        {

            oMaquinasHerramienta.UltimoMant = DateTime.Now;
            oMaquinasHerramienta.DescripcionMantenimiento ="-";

            oMaquinasHerramienta.PeriodicidadMantenimiento = 15;
            oMaquinasHerramienta.FechaIngreso = DateTime.Now;

        }

        StateHasChanged();
    } 

    async Task Guardar()
    {
        disable = true;

        // Console.WriteLine("Llego");
        // Console.WriteLine(oMaquinasHerramienta.Codigo);
        // Console.WriteLine(oMaquinasHerramienta.Asignacion);
        // Console.WriteLine(oMaquinasHerramienta.DescripcionMantenimiento);
        // Console.WriteLine(oMaquinasHerramienta.Estado);
        // Console.WriteLine(oMaquinasHerramienta.Descripcion);
        // Console.WriteLine(oMaquinasHerramienta.FechaIngreso);
        // Console.WriteLine(oMaquinasHerramienta.PeriodicidadMantenimiento);
        // Console.WriteLine(oMaquinasHerramienta.UltimoMant == null);


        if (string.IsNullOrEmpty(oMaquinasHerramienta.Marca) ||
     string.IsNullOrEmpty(oMaquinasHerramienta.Codigo) ||
     string.IsNullOrEmpty(oMaquinasHerramienta.Asignacion) ||
     string.IsNullOrEmpty(oMaquinasHerramienta.DescripcionMantenimiento) ||
     string.IsNullOrEmpty(oMaquinasHerramienta.Estado) ||
     string.IsNullOrEmpty(oMaquinasHerramienta.Descripcion) ||
     oMaquinasHerramienta.FechaIngreso == null ||
     oMaquinasHerramienta.PeriodicidadMantenimiento == null ||
     oMaquinasHerramienta.UltimoMant == null)
        {
            await alertaError();
        }
        else
        {
            if (id != 0)
            {
                await http.PutAsJsonAsync<MaquinasHerramienta>("/api/maquinas", oMaquinasHerramienta);
                await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
            }
            else
            {
                oMaquinasHerramienta.Codigo = "H-" + oMaquinasHerramienta.Codigo;
                Console.WriteLine(oMaquinasHerramienta.Estado);
               


                await http.PostAsJsonAsync<MaquinasHerramienta>("/api/maquinas", oMaquinasHerramienta);
                await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
            }
            disable = false;


            await Get();
        }
    }
   
    async Task cancel()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok($"Form was cancelled"));

    }

    public async Task alertaError()
    {
        SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = $"Ingrese todos los datos",
                Icon = SweetAlertIcon.Error,
                ShowCancelButton = false,
                ConfirmButtonText = "Aceptar",

            });


    }

}
