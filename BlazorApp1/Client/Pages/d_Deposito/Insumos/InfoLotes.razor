@page "/infoLotes/{id:int}/{num:int}"

<br />
<button class="btn btn-outline-primary" @onclick="ComeBack"><FeatherArrowLeft Color="Blue"></FeatherArrowLeft></button>
<br />
<br />



@if (oInsumo != null)
{
    if (oLote != null)
    {




        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">
            <RadzenStack Gap="0">
                <RadzenColumn SizeSM="4">

                    <RadzenText TextStyle="TextStyle.H6" class="rz-color-on-primary-black"><strong>Lote: @oInsumo.Codigo</strong></RadzenText>
                    <button style="outline:none; float: right;height:100%; margin-bottom: 90%" class="no-print btn btn-outline" @onclick="() => print(oInsumo.Id, num)"><FeatherPrinter Color="Black"></FeatherPrinter></button>


                    <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Nombre</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Descripcion: </RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Descripcion</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Stock real: </RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.StockReal</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Stock máximo: </RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.StockMax</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Stock mínimo: </RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.StockMin</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Recepción: </RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Recepcion</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Estado: </RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oLote.Estado</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Cantidad en prestamo: </RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@StockCantidad</b></RadzenText>
                </RadzenColumn>



            </RadzenStack>
        </RadzenStack>

    }

    <RadzenTabs RenderMode="TabRenderMode.Client">
        <Tabs>

            <RadzenDataGrid Data="@ListLote" TItem="Lote" Style="max-height:50vh;max-width:100%; font-size:small;" AllowVirtualization="true"
                            AllowSorting="true" Density="Density.Compact">
                <Columns>
                    <RadzenDataGridColumn TItem="Lote" Property="" Title="N° Lote" Width="10%">
                        <Template Context="data">
                            @($"L{data.Id}")
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Lote" Property="Cantidad" Title="Cantidad" Width="15%" />
                    <RadzenDataGridColumn TItem="Lote" Property="CantidadIngreso" Title="Cantidad al ingreso" Width="15%" />
                    <RadzenDataGridColumn TItem="Lote" Property="FechaIngreso" Title="Fecha de Ingreso" Width="20%" />
                    <RadzenDataGridColumn TItem="Lote" Property="NroRemito" Title="N° Remito" Width="15%" />
                    <RadzenDataGridColumn TItem="Lote" Property="Alto" Title="Alto" Width="10%" />
                    <RadzenDataGridColumn TItem="Lote" Property="Ancho" Title="Ancho" Width="10%" />
                    <RadzenDataGridColumn TItem="Lote" Property="Proveedor" Title="Proveedor" Width="20%" />

                </Columns>
            </RadzenDataGrid>
        </Tabs>
    </RadzenTabs>

}
else
{
    <br />
    <center>
        <div class="mb-2">
            <RadzenProgressBar Value="100" ShowValue="false" ProgressBarStyle="ProgressBarStyle.Secondary" Mode="ProgressBarMode.Indeterminate" />
        </div>
    </center>
}









@code {




    InsumoDTO oInsumo = null;

    Respuesta<InsumoDTO>
    oRta = new();



    Lote oLote = null;
    List<Lote> ListLote = new();
    List<Lote> LoteChoose = null;

    [Parameter] public int? id { get; set; }
    [Parameter] public int? num { get; set; }

    int? StockCantidad;


    protected override async Task OnInitializedAsync()
    {




        var rta = await http.GetFromJsonAsync<Respuesta<Lote>>($"/api/Lotes/{num}");
        oLote = rta.List;

        oRta = await http.GetFromJsonAsync<Respuesta<InsumoDTO>>($"/api/insumo/{id}");
        oInsumo = oRta.List;

        ListLote.Add(oLote);
        var oPrestamo = await http.GetFromJsonAsync<Respuesta<List<PrestamoDTO>>>("/api/prestamo");
        // Cantidad de un mismo lote usado en un prestamo
        StockCantidad = oPrestamo.List.Where(x => x.Lote == num && x.FechaInicio >= DateTime.Now && x.FechaFin > DateTime.Now && x.FechaFinReal == null).Sum(x => x.Cantidad);

    }

    public async Task ComeBack()
    {
        nav.NavigateTo($"/infoinsumo/{id}");
    }



    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    [CascadingParameter] public IModalService Modal { get; set; } = default!;


    async Task print(int? id, int? idLote)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(Etiqueta.Id), id);
        parameters.Add(nameof(Etiqueta.idLote), idLote);


        var options = new ModalOptions()
            {
                Size = ModalSize.Large
            };

        var formModal = Modal.Show<Etiqueta>("", parameters, options);
        var result = await formModal.Result;

    }

}
