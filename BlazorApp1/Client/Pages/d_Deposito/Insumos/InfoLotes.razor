@page "/infoLotes/{id:int}/{num:int}"





@if (oInsumo != null)
{




    
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">
        <RadzenStack Gap="0">
            <RadzenColumn SizeSM="4">
              
                <RadzenText TextStyle="TextStyle.H6" class="rz-color-on-primary-black"><strong>INSUMO N° @id</strong></RadzenText>
                <button style="outline:none; float: right;height:100%; margin-bottom: 90%" class="no-print btn btn-outline" @onclick="() => print(id, num)"><FeatherPrinter Color="Black"></FeatherPrinter></button>

                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Nombre</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Descripcion: </RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Descripcion</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Stock real: </RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.StockReal</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Código: </RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Codigo</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Stock máximo: </RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.StockMax</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Stock mínimo: </RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.StockMin</b></RadzenText>



            </RadzenColumn>
        </RadzenStack>
    </RadzenStack>

 

     <RadzenTabs RenderMode="TabRenderMode.Client">
                <Tabs>

            <RadzenDataGrid Data="@LoteChoose" TItem="Lotes" Style="max-height:50vh;max-width:100%; font-size:small;" AllowVirtualization="true"
                                        AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                                        AllowSorting="true" Density="Density.Compact">
                            <Columns>
                                <RadzenDataGridColumn TItem="Lotes" Property="" Title="N° Lote" Width="10%">
                                    <Template Context="data">
                                        @($"L{data.Numero}")
                                    </Template>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="Lotes" Property="Cantidad" Title="Cantidad" Width="10%"/>
                                <RadzenDataGridColumn TItem="Lotes" Property="FechaIngreso" Title="Fecha de Ingreso" Width="20%" />
                                <RadzenDataGridColumn TItem="Lotes" Property="NroRemito" Title="N° Remito" Width="10%" />
                                <RadzenDataGridColumn TItem="Lotes" Property="Alto" Title="Alto" Width="10%" />
                                <RadzenDataGridColumn TItem="Lotes" Property="Ancho" Title="Ancho" Width="15%"/>
                                <RadzenDataGridColumn TItem="Lotes" Property="Proveedor" Title="Proveedor" Width="15%"/>
                                <RadzenDataGridColumn TItem="Lotes" Property="" Title="" Filterable="false" Width="10%">
                                    
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>                 
                    </Tabs>
                    </RadzenTabs>

}
else
{
    <br />
    <center>
        <div class="mb-2">
            <RadzenProgressBar Value="100" ShowValue="false" ProgressBarStyle="ProgressBarStyle.Secondary" Mode="ProgressBarMode.Indeterminate" />
        </div>
    </center>
}









@code {




    InsumoDTO oInsumo = null;

    Respuesta<InsumoDTO> oRta = new();



    List<Lotes> oLotes = null;

    List<Lotes> LoteChoose = null;
    
    [Parameter] public int? id { get; set; }
    [Parameter] public int? num { get; set; }
  

    

    protected override async Task OnInitializedAsync()
    {



        oRta = await http.GetFromJsonAsync<Respuesta<InsumoDTO>>($"/api/insumo/{id}");
        oInsumo = oRta.List;

        oLotes = JsonSerializer.Deserialize<List<Lotes>>(oInsumo.Lotes);

        LoteChoose = oLotes.Where(x => x.Numero == num).ToList();
    }

   



    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    [CascadingParameter] public IModalService Modal { get; set; } = default!;


    async Task print(int? id, int? num)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(AddInsumo.id), id);
        parameters.Add(nameof(InfoLotes.num), num);
        

        var options = new ModalOptions()
            {
                Size = ModalSize.Large
            };

        var formModal = Modal.Show<Etiqueta>("Etiqueta", parameters, options);
        var result = await formModal.Result;

    }


 
    
}
