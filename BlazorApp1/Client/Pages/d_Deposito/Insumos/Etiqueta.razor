@inject IJSRuntime _js
@using System.Drawing
@using System.Drawing.Imaging;


<style>
    @@media print {
        .no-print {
            display: none !important;
        }

        .head {
            display: none !important;
        }

        .header {
            display: none !important;
        }

        .bm-header {
            display: none !important;
        }

        .page {
            display: none !important;
        }
    }



    .impresion {
        height: 230px;
        width: 100%;
    }


    .card-img-left {
        float: left;
        height: 40%;
        width: 60%;
    }


    .clearfix {
        clear: both;
    }

    .der {
        font-size: 15px;
        float: right;
        text-align: right;
    }

    .izq {
        font-size: 15px;
        float: left;
    }

    .col {
        width: 40%;
        height: 40%;
        float: right;
        margin-top: 3%;
        margin-left: 5%;
    }
</style>






<button class="btn btn-outline-primary" style="float: right;" @onclick="Print"><FeatherPrinter Color="black"></FeatherPrinter></button>


<div class="impresion row" id="DivIdToPrint" style="margin-bottom: 20px;">






    <img src="/Images/logo1.png" class="card-img-left" alt="...">

    <section class="col">


        @if (LoteChoose.First().Cantidad != null)
        {
            <a> N DE LOTE: @LoteChoose.First().Numero</a>
        }
        else
        {
            <a>N° DE LOTE: No encontrado</a>
        }

        <br />
        
        @if (LoteChoose.First().Cantidad != null)
        {
            <a> CANTIDAD: @LoteChoose.First().Cantidad</a>
        }
        else
        {
            <a> CANTIDAD: No encontrado</a>
        }
    </section>
    @if (oInsumo.Codigo != null)
    {

        <a class="izq">Insumo: @oInsumo.Codigo</a>
    }
    else
    {
        <a class="izq">Codigo no encontrado</a>
    }
    <br />



    @if (oInsumo.Descripcion != null)
    {

        <a style="text-align: center"> @oInsumo.Descripcion</a>
    }
    else
    {
        <a class="izq">Descripción no encontrado</a>
    }




    <div class="clearfix"></div>
    <br />
    <div>
        @if (LoteChoose.First().FechaIngreso != null)
        {
            <a style="float: right"> Fecha ingreso: @LoteChoose.First().FechaIngreso</a>
        }
        else
        {
            <a style="float: right"> Fecha ingreso: No encontrada</a>
        }

        @if (@oInsumo.OrdencompraInsumoNavigations.First().Proveedor != null)
        {
            <a style="float: left;"> Proveedor: @oInsumo.OrdencompraInsumoNavigations.First().ProveedorNavigation.RazonSocial</a>
        }
        else
        {
            <a style="float: left;"> Proveedor: No encontrado</a>
        }
    </div>

    <div class="clearfix"></div>
    <br />

    <h1 style="font-size: 30px; font-weight: 3px; text-align: center; "> APROBADO</h1>






</div>


@code {




    InsumoDTO oInsumo = null;



    Respuesta<InsumoDTO>
    oRta = new();
    [Parameter] public int? Id { get; set; }

    string imageQR = null;


    List<Lotes>
        oLotes = null;

    [Parameter] public int? num { get; set; }

    List<Lotes>
        LoteChoose = null;

    protected override async Task OnInitializedAsync()
    {

        oRta = await http.GetFromJsonAsync<Respuesta<InsumoDTO>>($"/api/insumo/{Id}");
        oInsumo = oRta.List;



        oLotes = JsonSerializer.Deserialize<List<Lotes>>(oInsumo.Lotes);

        LoteChoose = oLotes.Where(x => x.Numero == num).ToList();

    }


    private async Task Print()
         => await _js.InvokeVoidAsync("window.print");






}
