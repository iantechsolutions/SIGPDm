@page "/infoinsumo/{id:int}"
<br />
<button class="btn btn-outline-primary" @onclick="ComeBack"><FeatherArrowLeft Color="Blue"></FeatherArrowLeft></button>
<br />
<br />
<hr />




@if (oInsumo != null)
{
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">
        <RadzenStack Gap="0">
            <RadzenColumn SizeSM="4">
                <RadzenText TextStyle="TextStyle.H6" class="rz-color-on-primary-black"><strong>INSUMO N° @id</strong></RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Nombre</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Descripcion: </RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Descripcion</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Stock real: </RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.StockReal</b></RadzenText>
                @*agregar stock max y minimo*@
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: 15px">Código: </RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Codigo</b></RadzenText>
            </RadzenColumn>

        </RadzenStack>
    </RadzenStack>
    @if (oInsumo.Lotes != null && oInsumo.Lotes.Count() > 0)
    {

        <RadzenText TextStyle="TextStyle.Body1" Style="padding-top:1rem;"><b>Lotes: </b></RadzenText>
        <RadzenCard class="rz-shadow-0 rz-border-radius-0 ">

            <RadzenTabs RenderMode="TabRenderMode.Client">
                <Tabs>
                    <RadzenTabsItem Text="Nuevos">
                      
                        <RadzenDataGrid Data="@oLotesNuevo" TItem="Lotes"  Style="max-height:50vh;max-width:100%; font-size:small;" AllowVirtualization="true"
                                        AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                                        AllowSorting="true" Density="Density.Compact">
                            <Columns>
                                <RadzenDataGridColumn TItem="Lotes" Property="" Title="N° Lote" Width="10%">
                                    <Template Context="data">
                                        @($"LR{data.Numero}")
                                    </Template>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="Lotes" Property="Cantidad" Title="Cantidad" Width="10%"/>
                                <RadzenDataGridColumn TItem="Lotes" Property="FechaIngreso" Title="Fecha de Ingreso" Width="20%" />
                                <RadzenDataGridColumn TItem="Lotes" Property="NroRemito" Title="N° Remito" Width="10%" />
                                <RadzenDataGridColumn TItem="Lotes" Property="Alto" Title="Alto" Width="10%" />
                                <RadzenDataGridColumn TItem="Lotes" Property="Ancho" Title="Ancho" Width="15%"/>
                                <RadzenDataGridColumn TItem="Lotes" Property="Proveedor" Title="Proveedor" Width="15%"/>
                                <RadzenDataGridColumn TItem="Lotes" Property="" Title="" Filterable="false" Width="10%">
                                    <Template Context="data">
                                        <button type="button" class="btn" title="Info" @onclick="() => Infor(data.Numero)"><FeatherInfo Color="blue" /> </button>
                                    </Template>
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Recorte">

                        <RadzenDataGrid Data="@oLotesRecorte" TItem="Lotes" Style="max-height:50vh;max-width:100%; font-size:small;" AllowVirtualization="true"
                                        AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                                        AllowSorting="true" Density="Density.Compact">
                            <Columns>
                                <RadzenDataGridColumn TItem="Lotes" Property="" Title="N° Lote" Width="10%">
                                    <Template Context="data">
                                        @($"LR{data.Numero}")
                                    </Template>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="Lotes" Property="Cantidad" Title="Cantidad" Width="10%"/>
                                <RadzenDataGridColumn TItem="Lotes" Property="FechaIngreso" Title="Fecha de Ingreso" Width="20%" />
                                <RadzenDataGridColumn TItem="Lotes" Property="NroRemito" Title="N° Remito" Width="10%" />
                                <RadzenDataGridColumn TItem="Lotes" Property="Alto" Title="Alto" Width="10%" />
                                <RadzenDataGridColumn TItem="Lotes" Property="Ancho" Title="Ancho" Width="15%"/>
                                <RadzenDataGridColumn TItem="Lotes" Property="Proveedor" Title="Proveedor" Width="15%"/>
                                <RadzenDataGridColumn TItem="Lotes" Property="" Title="" Filterable="false" Width="10%">
                                    <Template Context="data">
                                        <button type="button" class="btn" title="Info" @onclick="() => Infor(data.Numero)"><FeatherInfo Color="blue" /> </button>
                                    </Template>
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
                    </RadzenTabsItem>
                </Tabs>
            </RadzenTabs>


        </RadzenCard>
    }
    else
    {
        <a>No dispone lotes.</a>
    }
}
else
{
    <br />
    <br />
    <br />
    <center>
        <div class="mb-2">
            <RadzenProgressBar Value="100" ShowValue="false" ProgressBarStyle="ProgressBarStyle.Secondary" Mode="ProgressBarMode.Indeterminate" />
        </div>
    </center>
}





@code {

    InsumoDTO oInsumo = null;

    Respuesta<InsumoDTO> oRta = new();



    List<Lotes> oLotes = null;
    List<Lotes> oLotesRecorte = null;
    List<Lotes> oLotesNuevo = null;



    [Parameter] public int? id { get; set; }



    protected override async Task OnInitializedAsync()
    {



        oRta = await http.GetFromJsonAsync<Respuesta<InsumoDTO>>($"/api/insumo/{id}");
        oInsumo = oRta.List;
        oLotes = JsonSerializer.Deserialize<List<Lotes>>(oInsumo.Lotes);
        oLotesNuevo = oLotes.Where(x => x.Tipo == "Lote nuevo").ToList();
        oLotesRecorte = oLotes.Where(x => x.Tipo == "Lote de recorte").ToList();

    }

    async Task ComeBack()
    {
        nav.NavigateTo("/insumos");
    }

    async Task Infor(int? num)
    {
        var parameters = new ModalParameters();

        parameters.Add(nameof(AddLote.idLote), num);
        parameters.Add(nameof(AddInsumo.id), oInsumo.Id);



        nav.NavigateTo($"/infoLotes/{oInsumo.Id}");



    }

}
