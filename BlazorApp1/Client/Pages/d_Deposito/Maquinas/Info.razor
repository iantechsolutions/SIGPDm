@page "/infoInsumos/{id:int}"


<style>
    @@media print {
        .no-print {
        display: none !important;
    }

    body {
        font-size: 7px !important;
        margin: 0;
        padding: 0;
        margin-bottom: 5px;
    }
    }
    


</style>

<br />
<button class="btn btn-outline-primary no-print" @onclick="ComeBack"><FeatherArrowLeft Color="Blue"></FeatherArrowLeft></button>
<br />
<br />
<div class="flex-column no-print">

    <button class="btn btn-outline-success " style="float:right" @onclick="()=>Mantenimiento()">Mantenimiento correctivo</button>
    <button class="btn btn-outline-success" style="float:right" @onclick="()=>Print()">Imprimir detalles de mantenimiento</button>
    <h1>Herramienta n°@id</h1>
    <p>Descripción herramienta (*)</p>
</div>
<hr />
<br />

<div class="row">
    <div class="col-md-6 col-xl-6">

        <RadzenCard Class="m-3 no-print">
            @* <div class="d-flex flex-row p-3"> *@
            <div class="p-3">
                <div class="no-print">
                    <h1><strong>Ficha técnica @oInsumo.Codigo</strong></h1>
                    <div class="row">
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Nombre</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Nombre</b></RadzenText>
                        </div>
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Marca</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Marca</b></RadzenText>
                        </div>
                    </div>
                    <br/>
                    <div class="row">
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Descripcion</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Descripcion</b></RadzenText>
                        </div>
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Asignacion</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Asignacion</b></RadzenText>
                        </div>
                    </div>
                    <br/>
                    <div class="row">
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Estado</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.Estado</b></RadzenText>
                        </div>
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Motivo Estado</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.MotivoEstado</b></RadzenText>
                        </div>
                    </div>
                    <br/>
                    <div class="row">
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Detalle ultimo mantenimiento preventivo</RadzenText>
                            @if (oInsumo.DetalleMantenimiento != null)
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.DetalleMantenimiento</b></RadzenText>
                            }
                            else
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>No se registro un detalle</b></RadzenText>
                            }
                        </div>
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Ultimo mantenimiento preventivo</RadzenText>
                            @if (oInsumo.UltimoMant.HasValue || oInsumo.UltimoMant != null)
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.MantenimientoPreventivo</b></RadzenText>
                            }
                            else
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>No se registro un mantenimiento inicial</b></RadzenText>
                            }
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Fecha de ingreso</RadzenText>
                            @if (oInsumo.FechaIngreso.HasValue)
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.FechaIngreso.Value.ToString("dd/MM/yyyy")</b></RadzenText>
                            }
                            else
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>Sin fecha de ingreso registrada</b></RadzenText>
                            }
                        </div>
                        <div class="col-sm-6">
                           
                        </div>
                    </div>
                </div>
            </div>
        </RadzenCard>
    </div>
    <div class="col-md-6 col-xl-6">

        <RadzenCard Class="m-3">
            <div class=" p-3">
                <div>
                    <h4><strong>Mantenimiento</strong></h4>
                    <div class="row">
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Periocidad mantenimiento</RadzenText>
                            @if(oInsumo.PeriodicidadMantenimiento.HasValue){
                                <RadzenText TextStyle="TextStyle.Body1"><b>Cada @oInsumo.PeriodicidadMantenimiento Dias</b></RadzenText>
                            }
                            else
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>No se registro una periocidad para el mantenimiento</b></RadzenText>
                            }
                        </div>
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Descripcion mantenimiento</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@desc</b></RadzenText>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Fecha ultimo mantenimiento registrado</RadzenText>
                            @if(oInsumo.UltimoMant.HasValue){
                                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.UltimoMant.Value.ToString("dd/MM/yyyy")</b></RadzenText>
                            }
                            else
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>No se registro un mantenimiento inicial</b></RadzenText>
                            }
                        </div>
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Proximo mantenimiento</RadzenText>
                            @if(oInsumo.UltimoMant.HasValue){
                                <RadzenText TextStyle="TextStyle.Body1"><b>@proxMant.ToString("dd/MM/yyyy")</b></RadzenText>

                            }
                            else
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>No se registro una fecha de primer mantenimiento</b></RadzenText>
                            }
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Detalle ultimo mantenimiento</RadzenText>
                            @if (oInsumo.DetalleCorrectivo != null)
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.DetalleCorrectivo</b></RadzenText>
                            }
                            else
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>No se registro un detalle</b></RadzenText>
                            }
                        </div>
                        <div class="col-sm-6">
                            <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Disposicion</RadzenText>
                            @if (oInsumo.MotivoDisposicion != null)
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>@oInsumo.MotivoDisposicion</b></RadzenText>
                            }
                            else
                            {
                                <RadzenText TextStyle="TextStyle.Body1"><b>No se registro la disposicion</b></RadzenText>
                            }
                        </div>
                    </div>
                </div>
                <br />

            </div>
        </RadzenCard>
    </div>

    <br />
    <button style="outline:none; float: right; height:100%;" class="btn btn-outline" @onclick="() => CambiarModoFiltro()">
        <FeatherFilter Color="Black"></FeatherFilter>
    </button>

    <RadzenTabs Class="w-100 mx-auto" RenderMode="TabRenderMode.Client">
        <Tabs>
     <RadzenTabsItem Text="Mantenimientos">
                <RadzenDataGrid AllowFiltering="allowFiltering"
                                AllowColumnResize="true"
                                AllowAlternatingRows="false"
                                FilterMode="FilterMode.Simple"
                                AllowSorting="true"
                                PageSize="50"
                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                AllowPaging="true"
                                PagerHorizontalAlign="HorizontalAlign.Left"
                                ShowPagingSummary="true"
                                @ref="grid2"
                                Data="@Mantenimientoss"
                                TItem="Mantenimiento"
                                ColumnWidth="250px"
                                LogicalFilterOperator="LogicalFilterOperator.Or">

                    <Columns>
                        <RadzenDataGridColumn TItem="Mantenimiento" Property="Fecha" Filterable="false" Title="Fecha" Width="20%" TextAlign="TextAlign.Center">
                            <Template Context="data">
                                @if (data.Fecha.HasValue)
                                {
                                    <a>@data.Fecha.Value.ToString("dd/MM/yyyy")</a>
                                }
                            </Template>
                        </RadzenDataGridColumn>

                        <RadzenDataGridColumn TItem="Mantenimiento" Property="Detalle" Filterable="false" Title="Detalle" Width="20%" TextAlign="TextAlign.Center" />
                        <RadzenDataGridColumn TItem="Mantenimiento" Property="Etapas" Filterable="false" Title="Pasos" Width="20%" TextAlign="TextAlign.Center" />
                        <RadzenDataGridColumn TItem="Mantenimiento" Property="Personal" Filterable="false" Title="Operario" Width="20%" TextAlign="TextAlign.Center" />
                        <RadzenDataGridColumn TItem="Mantenimiento" Property="" Title="" Filterable="false" Width="30px">
                            <Template Context="data">
                                <button class="btn" title="Ver info" @onclick="() => MantenimientoInfo(data.Id)"><FeatherInfo Color="blue" /></button>
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
</div>


@code {

    [Parameter] public int id { get; set; }

    [CascadingParameter] public IModalService Modal { get; set; } = default!;
    InsumoDTO? oInsumo = new();
    RadzenDataGrid<InsumoDTO>? grid = new();
    DateTime proxMant = new();
    int currentPage;
    bool allowFiltering = false;
    string? desc = "";

    List<Mantenimiento> Mantenimientoss = new();
    RadzenDataGrid<Mantenimiento>? grid2;


    protected override async Task OnInitializedAsync()
    {
        await Get();
    }

    async Task Get()
    {
        var respuesta = await http.GetFromJsonAsync<Respuesta<InsumoDTO>>($"/api/insumo/{id}");


        var respuesta2 = await http.GetFromJsonAsync<Respuesta<List<Mantenimiento>>>("/api/Mantenimiento");
        Mantenimientoss = respuesta2.List.Where(x=>x.Insumo == id).OrderByDescending(x=>x.Fecha).ToList();

        if (respuesta == null || respuesta.List == null)
        {
            Console.WriteLine("La respuesta de la API es nula.");
            return;
        }

        oInsumo = respuesta.List;
        StateHasChanged();

        if (!string.IsNullOrEmpty(oInsumo.DescripcionMantenimiento))
        {
            try
            {
                desc = string.Join(", ", JsonSerializer.Deserialize<List<string>>(oInsumo.DescripcionMantenimiento) ?? new List<string>());
            }
            catch (JsonException ex)
            {
                Console.WriteLine($"Error al deserializar DescripcionMantenimiento: {ex.Message}");
                desc = "-";
            }
        }

        if (oInsumo.UltimoMant.HasValue && oInsumo.PeriodicidadMantenimiento.HasValue)
        {
            TimeSpan perio = TimeSpan.FromDays((double)oInsumo.PeriodicidadMantenimiento);
            TimeSpan difference = DateTime.Now - oInsumo.UltimoMant.Value;
            var multiplicador = Math.Ceiling(difference.TotalDays / perio.TotalDays);
            proxMant = oInsumo.UltimoMant.Value.AddDays(multiplicador * ((double)oInsumo.PeriodicidadMantenimiento));
        }
    }
    async Task ComeBack()
    {
        nav.NavigateTo("/maquinas");
    }
    public void CambiarModoFiltro()
    {
        allowFiltering = !allowFiltering;
        StateHasChanged();
    }


    public async Task Mantenimiento()
    {
        var parameters = new ModalParameters();

        var options = new ModalOptions()
            {
                HideHeader = true,
                Size = ModalSize.Large
            };
        parameters.Add(nameof(MantenimientoCorrectivo.id), id);

        var formModal = Modal.Show<MantenimientoCorrectivo>("Generar mantenimiento correctivo", parameters, options);
        var result = await formModal.Result;
        if (result.Cancelled)
        {
            Console.WriteLine("Modal was cancelled");
        }
        else if (result.Data != null)
        {
            await Get();
        }
    }



    public async Task MantenimientoInfo(int? id)
    {

        var parameters = new ModalParameters();
        parameters.Add(nameof(InfoMantenimiento.id), id);
        var options = new ModalOptions()
            {
                Size = ModalSize.Medium

            };
        var formModal = Modal.Show<InfoMantenimiento>("Informacion del mantenimiento", parameters, options);
        var result = await formModal.Result;
        if (result.Cancelled)
        {
            Console.WriteLine("Modal was cancelled");

        }
        else
        {

        }
    }


    public async Task Print()
    {
        var parameters = new ModalParameters();

        var options = new ModalOptions()
            {
                HideHeader = true,
                Size= ModalSize.Large
            };
        parameters.Add(nameof(ImprimirMantenimiento.id), id);

        var formModal = Modal.Show<ImprimirMantenimiento>("imprimir mantenimiento", parameters, options);
        var result = await formModal.Result;
        if (result.Cancelled)
        {
            Console.WriteLine("Modal was cancelled");
        }
        else if (result.Data != null)
        {
            await Get();
        }
    }

}
