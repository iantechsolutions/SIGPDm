@page "/recepcionmateriales"
<br />
<button class="btn btn-outline-primary" @onclick="ComeBack"><FeatherArrowLeft Color="Blue"></FeatherArrowLeft></button>
<br />
<br />
<h1>Recepción de materiales</h1>
<p>En esta sección se podrán gestionar la recepción de los materiales.</p>
<hr />
@if (oRespuesta.List != null)
{



    <button style="outline:none; float: right;height:100%;" class="btn btn-outline" @onclick="() => CambiarModoFiltro()"><FeatherFilter Color="Black"></FeatherFilter></button>

    <br />
    <br />
    <RadzenTabs Class="w-100 mx-auto" RenderMode="TabRenderMode.Client">
        <Tabs>
            <RadzenTabsItem Text="Pendientes">
                <RadzenDataGrid FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="allowFiltering" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Simple"
                                AllowSorting="true" PageSize="50" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" @ref="grid"
                                Data="@oRespuestaPendientes" TItem="OrdencompraDTO" ColumnWidth="250px" LogicalFilterOperator="LogicalFilterOperator.Or">
                   
                    <Columns>
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Id" Title="Id" Width="10%" />
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="InsumoNavigation.Descripcion" Title="Insumo" Width="30%" />
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="ProveedorNavigation.RazonSocial" Title="Proveedor" Width="20%" />
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Cantidad" Title="Cantidad" Width="10%" />
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Especificacion" Title="Especificación" Width="10%" />

            
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="" Title="" Filterable="false" Width="10%">
                            <Template Context="data">
                                <button class="btn" title="Confirmar recepcion" @onclick="() => Aceptar(data)"><FeatherCheck Color="Green" /></button>
                            </Template>
                        </RadzenDataGridColumn>

            
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="" Title="" Filterable="false" Width="10%">
                            <Template Context="data">
                                <button class="btn" title="Rechazar recepción" @onclick="() => Rechazada(data)"><FeatherTrash Color="red" /></button>
                            </Template>
                        </RadzenDataGridColumn>


                    </Columns>

                </RadzenDataGrid>
            </RadzenTabsItem>
                <RadzenTabsItem Text="Aprobadas">
                    <RadzenDataGrid FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="allowFiltering" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Simple"
                                    AllowSorting="true" PageSize="50" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" @ref="grid2"
                                Data="@oRespuestaAprobados" TItem="OrdencompraDTO" ColumnWidth="250px" LogicalFilterOperator="LogicalFilterOperator.Or">

                        <Columns>
                            <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Id" Title="Id" Width="10%" />
                            <RadzenDataGridColumn TItem="OrdencompraDTO" Property="InsumoNavigation.Descripcion" Title="Insumo" Width="30%" />
                            <RadzenDataGridColumn TItem="OrdencompraDTO" Property="ProveedorNavigation.RazonSocial" Title="Proveedor" Width="20%" />
                            <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Cantidad" Title="Cantidad" Width="10%" />
                            <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Especificacion" Title="Especificación" Width="10%" />


                         

                        </Columns>

                    </RadzenDataGrid>

                </RadzenTabsItem>

                <RadzenTabsItem Text="Rechazadas">
                    <RadzenDataGrid FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="allowFiltering" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Simple"
                                    AllowSorting="true" PageSize="50" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" @ref="grid3"
                                    Data="@oRespuestaRechazados" TItem="OrdencompraDTO" ColumnWidth="250px" LogicalFilterOperator="LogicalFilterOperator.Or">

                        <Columns>
                            <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Id" Title="Id" Width="10%" />
                            <RadzenDataGridColumn TItem="OrdencompraDTO" Property="InsumoNavigation.Descripcion" Title="Insumo" Width="30%" />
                            <RadzenDataGridColumn TItem="OrdencompraDTO" Property="ProveedorNavigation.RazonSocial" Title="Proveedor" Width="20%" />
                            <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Cantidad" Title="Cantidad" Width="10%" />
                            <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Especificacion" Title="Especificación" Width="10%" />



                        </Columns>

                    </RadzenDataGrid>
                </RadzenTabsItem>
            <RadzenTabsItem Text="En Observacion">
                <RadzenDataGrid FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="allowFiltering" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Simple"
                                AllowSorting="true" PageSize="50" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" @ref="grid2"
                                Data="@oRespuestaObser" TItem="OrdencompraDTO" ColumnWidth="250px" LogicalFilterOperator="LogicalFilterOperator.Or">

                    <Columns>
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Id" Title="Id" Width="10%" />
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="InsumoNavigation.Descripcion" Title="Insumo" Width="30%" />
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="ProveedorNavigation.RazonSocial" Title="Proveedor" Width="20%" />
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Cantidad" Title="Cantidad" Width="10%" />
                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="Especificacion" Title="Especificación" Width="10%" />

                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="" Title="" Filterable="false" Width="10%">
                            <Template Context="data">
                                <button class="btn" title="Aprobar orden" @onclick='() => TerminarObser("aprobada",data)'><FeatherThumbsUp Color="Green" /></button>
                            </Template>
                        </RadzenDataGridColumn>


                        <RadzenDataGridColumn TItem="OrdencompraDTO" Property="" Title="" Filterable="false" Width="10%">
                            <Template Context="data">
                                <button class="btn" title="Desaprobar orden" @onclick='() => TerminarObser("desaprobada",data)'><FeatherThumbsDown Color="red" /></button>
                            </Template>
                        </RadzenDataGridColumn>


                    </Columns>

                </RadzenDataGrid>

            </RadzenTabsItem>

        </Tabs>
    </RadzenTabs>

}
else
{
    <br />
    <center>
        <div class="mb-2">
            <RadzenProgressBar Value="100" ShowValue="false" ProgressBarStyle="ProgressBarStyle.Secondary" Mode="ProgressBarMode.Indeterminate" />
        </div>
    </center>
}

@code {
    List<InsumoDTO> oRespuestaPendienteRecepcion = new();
    [CascadingParameter] public IModalService Modal { get; set; } = default!;
    int? mayorLote = 0;
    Respuesta<List<OrdencompraDTO>> oRespuesta = new();
    ICollection<OrdencompraDTO> Presupuestos;
    List<Lote> todosLosLotes = new();
    RadzenDataGrid<OrdencompraDTO>? grid;
    RadzenDataGrid<OrdencompraDTO>? grid2;
    RadzenDataGrid<OrdencompraDTO>? grid3;
    bool allowFiltering = false;



    List<OrdencompraDTO> oRespuestaPendientes = new();
    List<OrdencompraDTO> oRespuestaAprobados = new();
    List<OrdencompraDTO> oRespuestaRechazados = new();
    List<OrdencompraDTO> oRespuestaObser = new();

    protected override async Task OnInitializedAsync()
    {
        await Get();
    }

    async Task ComeBack()
    {
        nav.NavigateTo("/deposito");
    }

    async Task Get()
    {
        var respuesta = await http.GetFromJsonAsync<Respuesta<List<OrdencompraDTO>>>($"/api/oc");
        oRespuesta = respuesta;

        oRespuestaPendientes = respuesta.List.Where(x => x.Estado == "Aprobada" && x.Recepcionada == null).ToList();
        oRespuestaAprobados = respuesta.List.Where(x => x.Estado == "Recibido" || x.Estado == "RecepcionParcial").ToList();
        oRespuestaRechazados = respuesta.List.Where(x => x.Estado == "RecepcionRechazada").ToList();
        oRespuestaObser = respuesta.List.Where(x => x.Estado == "Observacion").ToList();


        var rta = await http.GetFromJsonAsync<Respuesta<List<Lote>>>($"/api/Lotes");
        todosLosLotes = rta.List;
        StateHasChanged();
    }


    public void CambiarModoFiltro()
    {
        allowFiltering = !allowFiltering;
        StateHasChanged();
    }


    async Task Aceptar(OrdencompraDTO data)
    {


        var parameters = new ModalParameters();

        var options = new ModalOptions()
            {
                HideHeader = true,
            };
        parameters.Add(nameof(AddReception.Id), data.Id);

        var formModal = Modal.Show<AddReception>("", parameters, options);
        var result = await formModal.Result;
        if (result.Cancelled)
        {
            Console.WriteLine("Modal was cancelled");
        }
        else if (result.Data != null)
        {
            await Get();
            await grid.Reload();
            await grid2.Reload();
            await grid3.Reload();

        }



    }

    public async Task Rechazada(OrdencompraDTO data)
    {
        var parameters = new ModalParameters();

        var options = new ModalOptions()
            {
                HideHeader = true,
            };

        parameters.Add(nameof(AddRechazada.id), data.Id);

        var formModal = Modal.Show<AddRechazada>("", parameters, options);
        var result = await formModal.Result;
        if (result.Cancelled)
        {
            Console.WriteLine("Modal was cancelled");
        }
        else
        {

            await Get();
            await grid.Reload();
            await grid2.Reload();
            await grid3.Reload();

        }


    }

    public async Task TerminarObser(string? accion, OrdencompraDTO orden)
    {
        var rta = await http.GetFromJsonAsync<Respuesta<List<Lote>>>($"/api/lotes");
        var listaLotes = rta.List;
        var lote = listaLotes.Where(x => x.OC == orden.Id).FirstOrDefault();
        if(accion == "aprobada"){

            orden.Estado = "Recibido";
            await http.PutAsJsonAsync<OrdencompraDTO>("/api/OC", orden);
            lote.Estado = "Aprobado";
            await http.PutAsJsonAsync<Lote>("/api/lotes", lote);
        }
        else{
            orden.Estado = "RecepcionRechazada";
            await http.PutAsJsonAsync<OrdencompraDTO>("/api/OC", orden);
            lote.Estado = "Desaprobado";
            await http.PutAsJsonAsync<Lote>("/api/lotes", lote);
        }
        await Get();
        await grid.Reload();
        await grid2.Reload();
        await grid3.Reload();
    }
}